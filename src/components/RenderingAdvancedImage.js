import "../App.css";
import SandpackWrapper from "./SandpackWrapper";
import Experiment from "./experiments";

const singleImage = `import {AdvancedImage} from '@cloudinary/react';
import {CloudinaryImage} from "@cloudinary/url-gen";
export default function App() {
  const cldImage = new CloudinaryImage('sample1',{cloudName: "picturecloud7"}); 
  return (
    <div>
      <AdvancedImage height="300" alt="Sample Image" cldImg={cldImage} />
    </div>
  )
}`;
const multipleImages = `import {AdvancedImage} from '@cloudinary/react';
import {Cloudinary} from "@cloudinary/url-gen";
export default function App() {
  const cld = new Cloudinary({
    cloud: {
      cloudName: "picturecloud7"
    }
  }); 
  const cldImage1 = cld.image('sample1');
  const cldImage2 = cld.image('sample2');
  return (
    <div>
    <AdvancedImage height="300" alt="Sample Image 1" cldImg={cldImage1} />
    <AdvancedImage height="300" alt="Sample Image 2" cldImg={cldImage2} />
    </div>
  )
}`;

export default function RenderingAdvancedImage() {
  return (
    <div className="code-container">
      <h2
        className={
          "font-sans font-medium leading-tight text-2xl mt-0 mb-2 text-clddarkblue"
        }
      >
        AdvancedImage: Delivering Image Elements from a CDN
      </h2>
      <Experiment
        codeString={`<img height="300px" alt="Sample Image" src="https://res.cloudinary.com/cloudinary-training/image/upload/sample1?_a=AJARNWI0">`}
        experimentTitle={"Experiment by examining the image element."} 
        notes={"All Cloudinary assets are delivered via CDN. This is a big step in optimization. The AdvancedImage component creates an HTML5 images elements. You can include HTML5 image attributes such as width, height and alt. In addition we'll see how to include plugins that will provide lazy loading, placeholders, responsive image, and accessibility. You only need to specify a Cloudinary Cloud Name and Public ID to create an image object. Once you have that object, you can hand it off to the AdvancedImage component to render it."} 
        instructions={[
          `Right click on an image and select "Open Image in New Tab" to see the URL in the browser request`,
          "Open Chrome inspector and look at the image URLs generated by AdvancedImage",
          "Add or modify HTML5 image attributes like alt, title, width and height",
        ]}
      />
      <h3
        className={
          "font-sans font-medium leading-tight text-2xl mt-0 mb-2 text-clddarkblue"
        }
      >
        Single Image:
      </h3>
      <p className={"font-sans mt-1 mb-1 text-clddarkblue"}>
        When you are rendering just a single image in your component, you can
        use "CloudinaryImage" and supply both Cloud Name and Public ID.
      </p>
      <SandpackWrapper numberOnPage="2" scriptName={singleImage} />
      <h3
        className={
          "font-sans font-medium leading-tight text-2xl mt-0 mb-2 text-clddarkblue"
        }
      >
        Multiple Images:
      </h3>
      <p className={"font-sans mt-1 mb-1 text-clddarkblue"}>
        When you are rendering multiple images in your component, it is more
        efficient to create a Cloudinary instance, which has an image method
        that will generate new CloudinaryImage objects for you. You only have to
        specify the Cloud Name once when you create a Cloudinary instance. When
        you create a new image, you specify the Public ID.
      </p>
      <SandpackWrapper numberOnPage="2" scriptName={multipleImages} />
    </div>
  );
}
